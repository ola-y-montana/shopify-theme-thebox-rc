<script>
 function defer(method, validation) {
    if (validation()) {
      method();
    } else {
      setTimeout(function() { defer(method, validation) }, 50);
    }
 }
</script>
<script>
  defer(function(){
    !function(e){e.fn.prepareTransition=function(){return this.each(function(){var t=e(this);t.one("TransitionEnd webkitTransitionEnd transitionend oTransitionEnd",function(){t.removeClass("is-transitioning")});var n=["transition-duration","-moz-transition-duration","-webkit-transition-duration","-o-transition-duration"],i=0;e.each(n,function(e,n){i||(i=parseFloat(t.css(n)))}),0!=i&&(t.addClass("is-transitioning"),t[0].offsetWidth)})}}(jQuery)
      }, function() { return window.jQuery })
</script>

<style>
.selector-wrapper.js.product-form__item {
    display: none;
}
  .main-content {
    padding-top: 0px !important;
  }
   /* SIZES SELECTOR: START    */
  .product-form__input option {
  	cursor: pointer;
  }
  .product-form__input option:disabled {
    cursor: default;
    background: #f1f1f1;
    color: silver;
  }
  .product-form .selector-wrapper.hidden {
  	display: none;
  }
  .product-form .sizes-option-wrapper {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    position: relative;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  .product-form .size-option-button {
    outline: none !important;
  	width: auto;
    min-width: 38px;
    height: 35px;
    line-height: 16px;
    padding: 9px 10px;
    box-sizing: border-box;
    font-size: 13px;
    width: auto;
    min-width: 44px;
    height: 41px;
    line-height: 19px;
    font-family: inherit;
    font-weight: bold;
    border-radius: 3px;
    margin: 0 8px 8px 0;
    color: #010101; /* #888 */
    border: 1.1px solid #e6e6e6;
    background-color: #f9f9f9;
  }
  .product-form .size-option-button.selected {
    color: #064888;
    border-color: #064888;
    background-color: #f9fcf3;
  }
  .product-form .size-option-button.unavailable {
    position: relative;
    color: #cccccc;
    border: 1px solid #e6e6e6;
    background-color: inherit;
    background: linear-gradient( to bottom right, #fff calc(50% - 1px), #e6e6e6, #fff calc(50% + 1px) );
  }
  .product-template__container .breadcrumbds-wrapper {
  	margin-top: 7px;
  }
  .product-template__container .sku-wrapper {
  	color: #888;
    font-size: 13px;
    font-weight: 500;
  }
  
  .product-template__container .breadcrumbs {
    margin-bottom: 15px;
  }
  
  /* SIZES SELECTOR: END */
  .product-form__cart-submit, .shopify-payment-button .shopify-payment-button__button--unbranded {
  	background-color: #000000;
  }

  .loader-wrapper {
    position: relative;
    top: -3px;
    margin-left: 5px;
  }
</style>
<style>
   /* ITEM VARIANTS COLORS: START    */
  .grid__item .grid-view-item-variants-count {
  	margin-top: 10px;
    margin-bottom: 0;
    font-weight: bold;
    font-size: 16px;
    color: #000000;
  }
  .grid__item .grid-view-item-icons {
    background: white;
    position: absolute;
    bottom: -15px;
    display: none;
    margin-top: 5px;
  }
  .grid__item .product-single__meta .grid-view-item-icons {
    position: relative;
    bottom: inherit;
    top: -35px;
    margin-bottom: -52.5px;
  } 
  .grid__item:hover .grid-view-item-icons {
    display: block;
  }
  .grid__item:hover .grid-view-item-variants-count {
    opacity: 0;
  }
  .grid__item .grid-view-item-icons .related-image {
    display: inline-block;
    width: auto;
    vertical-align: top;
  }
  .grid__item .grid-view-item-icons .grid-view-item__color {
    display: inline-block;
    vertical-align: top;
    height: 22px;
    width: 22px;
    margin: auto;
    border: 3px solid #cbcbcb;
    border-radius: 100%;
	margin-right: 4px;
  }
  .grid__item .grid-view-item-icons .grid-view-item__color.active {
    border-color: #939393;
/*     border-width: 3px; */
  }
  #Avada-SC-button .Avada-inline-button {
  	margin-top: 15px;
  }
  /* ITEM VARIANTS COLORS: END */
</style>

<style>
  /* DELIVERY ESTIMATED TIME: START */
  .tbx-location-selector {
    text-align: center;
    margin-bottom: 40px;
    margin-top: 25px;
  }
  .tbx-location-selector h2 {
    margin-bottom: 20px;
  }
  .tbx-location-selector select {
    width: 100%;
    margin-bottom: 10px;
  }
  .tbx-location-selector .loader {
    display: none;
    vertical-align: bottom;
  }
  .tbx-location-selector .loader.abs {
    position: absolute;
    right: -25px;
    top: 83px;
  }
  .tbx-location-selector .loader svg {
    height: 20px;
    width: 20px;
  }
  .tbx-location-selector .output {
    margin: 0;
    margin-top: 15px;
  }
  .tbx-location-selector.loading {
  	margin-bottom: 0;
  }
  .tbx-location-selector.loading .loader,
  .tbx-location-selector .loading .loader{
    display: inline-block;
  }
  .tbx-location-selector.loading .output {
    margin-top: 0;
  }
  @media only screen and (min-width: 768px) {
    .tbx-location-selector select {
      width: 32.8%;
      margin-right: 2px;
    }
  }
  /* DELIVERY ESTIMATED TIME */
  
  /* PRODUCT TEMPLATE BADGE */
  .product__price {
    display: inline-block;
  }
  .grid.product-single .product-single__discount-percent-badge {
    display: inline-block;
    vertical-align: top;
    background: red;
    color: white;
    padding: 3px 10px;
    font-size: 13px;
    margin-left: -0.625rem;
    border-radius: 3px;
    font-weight: bold;
  }
  .grid.product-single .product-single__discount-percent-badge.adic {
    background: black;
    margin-left: 5px;
  }
  /* PRODUCT TEMPLATE BADGE: END */
</style>

<div class="product-template__container page-width"
  id="ProductSection-{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="product"
  data-enable-history-state="true"
  data-ajax-enabled="{{ settings.enable_ajax }}"
>
  {% comment %}
    Get first variant, or deep linked one
  {% endcomment %}
  {%- assign current_variant = product.selected_or_first_available_variant -%}
  {%- assign product_image_zoom_size = '1024x1024' -%}
  {%- assign product_image_scale = '2' -%}
  {%- assign enable_image_zoom = section.settings.enable_image_zoom -%}
  {%- assign compare_at_price = current_variant.compare_at_price -%}
  {%- assign price = current_variant.price -%}

  {% case section.settings.media_size %}
    {% when 'small' %}
      {%- assign product_media_width = 'medium-up--one-third' -%}
      {%- assign product_description_width = 'medium-up--two-thirds' -%}
      {%- assign height = 345 -%}
    {% when 'medium' %}
      {%- assign product_media_width = 'medium-up--one-half' -%}
      {%- assign product_description_width = 'medium-up--one-half' -%}
      {%- assign height = 530 -%}
    {% when 'large' %}
      {%- assign product_media_width = 'medium-up--two-thirds' -%}
      {%- assign product_description_width = 'medium-up--one-third' -%}
      {%- assign height = 720 -%}
    {% when 'full' %}
      {%- assign product_media_width = '' -%}
      {%- assign product_description_width = '' -%}
      {%- assign height = 1090 -%}
      {%- assign enable_image_zoom = false -%}
  {% endcase %}
  
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@1.33.3/dist/umd/supabase.min.js"></script>
  
    <div class="breadcrumbds-wrapper">
      {%- if collection.url -%}
      	{% include 'breadcrumbs' %}
      	{%- else -%}
      	<div style="height: 15px; width 100%"></div>
      {%- endif -%}
    </div>

  <div class="grid product-single{% if section.settings.enable_payment_button %} product-single--{{ section.settings.media_size }}-media{% endif %}">
    <div class="grid__item product-single__media-group {{ product_media_width }}{% if section.settings.media_size == 'full' %} product-single__media-group--full{% endif %}" data-product-single-media-group>
      {%- assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}

      {%- for media in product.media -%}
        {% include 'media', media: media, featured_media: featured_media, height: height, enable_image_zoom: enable_image_zoom, image_zoom_size: product_image_zoom_size, image_scale: product_image_scale %}
      {%- endfor -%}

      <noscript>
        {% capture product_image_size %}{{ height }}x{% endcapture %}
        <img src="{{ featured_media | img_url: product_image_size, scale: product_image_scale }}" alt="{{ featured_media.alt }}" id="FeaturedMedia-{{ section.id }}" class="product-featured-media" style="max-width: {{ height }}px;">
      </noscript>

      {% assign first_3d_model = product.media | where: "media_type", "model" | first %}

      {%- if first_3d_model -%}
        <button
          aria-label="{{ 'products.product.view_in_space_label' | t }}"
          class="product-single__view-in-space"
          data-shopify-xr
          data-shopify-model3d-id="{{ first_3d_model.id }}"
          data-shopify-title="{{ product.title | escape }}"
          data-shopify-xr-hidden
        >
          {% include 'icon-3d-badge-full-color' %}<span class='product-single__view-in-space-text'>{{ 'products.product.view_in_space' | t }}</span>
        </button>
      {%- endif -%}


      {% if product.media.size > 1 %}
        {% if product.media.size > 4 %}
          {%- assign enable_thumbnail_slides = true -%}
        {% endif %}

        <div class="thumbnails-wrapper{% if enable_thumbnail_slides == true %} thumbnails-slider--active{% endif %}">
          {% if enable_thumbnail_slides == true %}
            <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__prev thumbnails-slider__prev--{{ section.id }}">
              {% include 'icon-chevron-left' %}
              <span class="icon__fallback-text">{{ 'sections.slideshow.previous_slide' | t }}</span>
            </button>
          {% endif %}
          <ul class="product-single__thumbnails product-single__thumbnails-{{ section.id }}">
            {% for media in product.media %}
              <li class="product-single__thumbnails-item product-single__thumbnails-item--{{ section.settings.media_size }} js">
                <a href="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"
                   class="text-link product-single__thumbnail product-single__thumbnail--{{ section.id }}"
                   data-thumbnail-id="{{ section.id }}-{{ media.id }}"
                   {% if enable_image_zoom %}data-zoom="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"{% endif %}>

                    {%- capture thumbnailAlt -%}
                      {%- if media.media_type == 'video' or media.media_type == 'external_video' -%}
                        {{ 'sections.featured_product.video_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                      {%- elsif media.media_type == 'model' -%}
                        {{ 'sections.featured_product.model_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                      {%- else -%}
                        {{ 'sections.featured_product.gallery_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                      {%- endif -%}
                    {%- endcapture -%}

                    <img class="product-single__thumbnail-image" src="{{ media.preview_image | img_url: '110x110', scale: 2 }}" alt="{{ thumbnailAlt }}">
                    {%- if media.media_type == 'video' or media.media_type =='external_video' -%}
                      <div class="product-single__thumbnail-badge">
                        {% include 'icon-video-badge-full-color' %}
                      </div>
                    {%- endif -%}
                    {%- if media.media_type == 'model' -%}
                      <div class="product-single__thumbnail-badge">
                        {% include 'icon-3d-badge-full-color' %}
                      </div>
                    {%- endif -%}
                </a>
              </li>
            {% endfor %}
          </ul>
          {% if enable_thumbnail_slides == true %}
            <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__next thumbnails-slider__next--{{ section.id }}">
              {% include 'icon-chevron-right' %}
              <span class="icon__fallback-text">{{ 'sections.slideshow.next_slide' | t }}</span>
            </button>
          {% endif %}
        </div>
      {% endif %}
    </div>

    <div class="grid__item {{ product_description_width }}">
      <div class="product-single__meta">

        <h1 class="product-single__title">{{ product.title }}</h1>

          <div class="product__price" data-price-min="{{ product.price_min }}">
            {% include 'product-price', variant: current_variant, show_vendor: section.settings.show_vendor %}
          </div>

          {% if product.compare_at_price_max > product.price and settings.sale_discount_bubble_type == 'auto' %}
            <div class="product-single__discount-percent-badge">
              -{{ product.compare_at_price_max | minus: product.price | times: 100.0 | divided_by: product.compare_at_price_max | money_without_currency | times: 100 | remove: '.0'}}%
            </div>
          {% else %}
                 
            {% assign showDiscountDisclaimer = false %} 
            
            {% for tag in product.tags %}
              <!-- {{ tag  }} --->
               {% if tag contains 'dscto:' %}
                  <div class="product-single__discount-percent-badge">
                    -{{ tag | remove: 'dscto:'}}%
                  </div>
                {% endif %}
                {% if tag contains 'adic:' %}
                  {% assign showDiscountDisclaimer = true %} 
                  <div class="product-single__discount-percent-badge adic">
                    -{{ tag | remove: 'adic:'}}% Adic.
                  </div>
                {% endif %}
            {% endfor %}

            {%- if showDiscountDisclaimer == true -%}
                <div class="test rte">
                      * ¡RECUERDA! EL 20% ADICIONAL YA ESTÁ APLICADO EN EL PRECIO FINAL QUE SE MUESTRA*
                </div>
            {%- endif -%}
          {% endif %}
        
          <p class="sku-wrapper">SKU: <span data-current-variant-sku>{{ current_variant.sku }}<span></p>
          {% include 'product-variants-icons' product: product %}
        

          {% capture "form_classes" -%}
            product-form product-form-{{ section.id }}
            {%- unless section.settings.show_variant_labels %} product-form--hide-variant-labels {% endunless %}
            {%- if section.settings.enable_payment_button and product.has_only_default_variant %} product-form--payment-button-no-variants {%- endif -%}
            {%- if current_variant.available == false %} product-form--variant-sold-out {%- endif -%}
          {%- endcapture %}

          {% form 'product', product, class:form_classes, novalidate: 'novalidate', data-product-form: '' %}
            {% unless product.has_only_default_variant %}
              <div class="product-form__controls-group">
                {% for option in product.options_with_values %}
                  <div class="selector-wrapper js product-form__item {% if option.name == "Size" %}hidden{% endif %}">
                    <label {% if option.name == 'default' %}class="label--hidden" {% endif %}for="SingleOptionSelector-{{ forloop.index0 }}">
                      {{ option.name }}
                    </label>
                    <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input"
                      id="SingleOptionSelector-{{ forloop.index0 }}"
                      data-index="option{{ forloop.index }}"
                    >
                      {% for value in option.values %}
                        <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>
                      {% endfor %}
                    </select>
                  </div>
                {% endfor %}
              </div>
            {% endunless %}

            <select name="id" id="ProductSelect-{{ section.id }}" class="product-form__variants no-js">
              {% for variant in product.variants %}
                <option value="{{ variant.id }}"
                  {%- if variant == current_variant %} selected="selected" {%- endif -%}
                >
                  {{ variant.title }}  {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                </option>
              {% endfor %}
            </select>

            {% if section.settings.show_quantity_selector %}
              <div class="product-form__controls-group">
                <div class="product-form__item">
                  <label for="Quantity-{{ section.id }}">{{ 'products.product.quantity' | t }}</label>
                  <input type="number" id="Quantity-{{ section.id }}"
                    name="quantity" value="1" min="1" pattern="[0-9]*"
                    class="product-form__input product-form__input--quantity" data-quantity-input
                  >
                </div>
              </div>
            {% endif %}
        
			  {% for option in product.options_with_values %}
                {% if option.name == "Size" %}
        		  <div class="product-form__item product-form__item-sizes">
                    <label for="SingleOptionSelector-{{ forloop.index0 }}">
                      Talla
                    </label>
                    <div class="sizes-option-wrapper">
                      {% for value in option.values %}
                        <div class="size-option-button-wrapper">
                          <button type="button" class="size-option-button" data-value="{{ value | escape }}">{{ value }}</button>
                        </div>
                      {% endfor %}
                    </div>
        		  </div>
                {% endif %}
              {% endfor %}

            <div class="product-form__error-message-wrapper product-form__error-message-wrapper--hidden{% if section.settings.enable_payment_button %} product-form__error-message-wrapper--has-payment-button{% endif %}"
              data-error-message-wrapper
              role="alert"
            >
              <span class="visually-hidden">{{ 'general.accessibility.error' | t }} </span>
              {% include 'icon-error' %}
              <span class="product-form__error-message" data-error-message>{{ 'products.product.quantity_minimum_message' | t }}</span>
            </div>

            <div class="product-form__controls-group product-form__controls-group--submit">
              <div class="product-form__item product-form__item--submit
                {%- if section.settings.enable_payment_button %} product-form__item--payment-button {%- endif -%}
                {%- if product.has_only_default_variant %} product-form__item--no-variants {%- endif -%}"
              >
                <button type="submit" name="add"
                  {% unless current_variant.available %} aria-disabled="true"{% endunless %}
                  aria-label="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}"
                  class="btn product-form__cart-submit{% if section.settings.enable_payment_button %} btn--secondary-accent{% endif %}"
                  data-add-to-cart>
                  <span data-add-to-cart-text>
                    {% unless current_variant.available %}
                      {{ 'products.product.sold_out' | t }}
                    {% else %}
                      {{ 'products.product.add_to_cart' | t }}
                    {% endunless %}
                  </span>
                  <span class="hide" data-loader>
                    {% include 'icon-spinner' %}
                  </span>
                </button>
                {% if section.settings.enable_payment_button %}
                  {{ form | payment_button }}
                {% endif %}
              </div>
            </div>
          {% endform %}
            <button id="btn-modal-stock" class="btn product-form__cart-submit btn-available-stock" type="button">
              VER STOCK DISPONIBLE EN TIENDA
              <span class="hide loader-wrapper">
                {% include 'icon-spinner' %}
              </span>
            </button>
        </div>

        {%- comment -%}
          Live region for announcing updated price and availability to screen readers
        {%- endcomment -%}
        <p class="visually-hidden" data-product-status
          aria-live="polite"
          role="status"
        ></p>

        {%- comment -%}
          Live region for announcing that the product form has been submitted and the
          product is in the process being added to the cart
        {%- endcomment -%}
        <p class="visually-hidden" data-loader-status
          aria-live="assertive"
          role="alert"
          aria-hidden="true"
        >{{ 'products.product.loader_label' | t }}</p>

        <div class="product-single__description rte">
          {% render 'product-description-tabs', product: product %}
        </div>

        {% if section.settings.show_share_buttons %}
          {% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_media %}
        {% endif %}      
    </div>
  </div>
</div>

{% unless product == empty %}
  <script type="application/json" id="ProductJson-{{ section.id }}">
    {{ product | json }}
  </script>
  <script type="application/json" id="ModelJson-{{ section.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>
{% endunless %}

<script>
 function defer(method, validation) {
    if (validation()) {
      method();
    } else {
      setTimeout(function() { defer(method, validation) }, 50);
    }
 }
</script>

<script>
  defer(function(){
    var productData = JSON.parse(document.querySelector('#ProductJson-product-template').textContent);
    var variantSelect = document.querySelector('.single-option-selector-product-template[data-index="option2"]');
    var sizesOptionWrapper = document.querySelector('.sizes-option-wrapper');
    
    productData.variants.forEach(function(variant, idx) {
      if (variant.available) {
        return;
      }
      
      var option = sizesOptionWrapper.querySelector('.size-option-button[data-value="' + variant.option2 + '"]');
      var hiddenOption = variantSelect.querySelector('option[value="' + variant.option2 + '"]');
      
      hiddenOption.classList.add('unavailable');
      hiddenOption.disabled = true;
      option.classList.add('unavailable');
      option.disabled = true;
    });
    
    
    productData.variants.forEach(function(variant, idx) {     
      var option = sizesOptionWrapper.querySelector('.size-option-button[data-value="' + variant.option2 + '"]');
      option.setAttribute("data-sku", variant.sku); 
    });
    
    sizesOptionWrapper.addEventListener('click', function(e) {
      var target = e.target;
      if (!target.classList.contains('size-option-button') || target.classList.contains('unavailable')) {
        return;
      }
      
      var option = variantSelect.querySelector('option[value="' + target.dataset.value + '"]');
      option.selected = true;
      
      sizesOptionWrapper.querySelectorAll('.size-option-button').forEach(function(button) {
        button.classList.remove('selected');
      });
      target.classList.add('selected');
      
      variantSelect.dispatchEvent(new Event('change'));
      
      var currentVariant = productData.variants.find(function(variant) { return variant.option2 + "" === target.dataset.value + "" });
      document.querySelector('[data-current-variant-sku]').textContent = currentVariant.sku;
    });
    
    variantSelect.querySelector('option:not([disabled]):first-of-type').selected = true;
    sizesOptionWrapper.querySelector('.size-option-button:not(.unavailable):first-of-type').classList.add('selected');
    variantSelect.dispatchEvent(new Event('change'));
    
    $.urlParam = function(name){
        var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
        if (results === null || results === undefined) {
           return undefined;
        }
        return decodeURI(results[1]) || 0;
    }
    
    function getCollectionTagBreadcrumb() {
      if ($.urlParam('collection_tag')) {
          var $breadcrumbLastItem = $('.breadcrumbs .breadcrumbs__item:last-of-type')
          var $breadcrumbItem = $breadcrumbLastItem.clone()
          var $breadcrumbLink = $breadcrumbItem.find('.breadcrumbs__link')
          var collectionTagData = $.urlParam('collection_tag').split(',')
          var collectionTagUrl = collectionTagData[0]
          var collectionTitle = collectionTagData[1]
          
          var collectionUrl = '{{ collection.url }}/' + collectionTagUrl

          if (!collectionTitle || !collectionUrl) {
          	return
          }
        
          $breadcrumbLink.text(collectionTitle)
		  $breadcrumbLink.prop('href', collectionUrl)
		  $breadcrumbLastItem.find('a').removeAttr('aria-current')
          
          $breadcrumbItem.insertAfter($breadcrumbLastItem)
      }
    }
    
    getCollectionTagBreadcrumb()

    
  }, function() { return window.jQuery })
</script>

  
<script>
  defer(function () {
      $(document).on('mouseenter', '.grid__item .related-image, .grid__item .grid-view-item__color', function(e) {
          var $this = $(this)
          var $img = $(this).find('img')
          var imgUrl = $img.prop('src')
          var $mainImgContainer = $this.closest('.grid.product-single').length ? $this.closest('.grid.product-single') : $this.closest('.grid__item') 
          var $mainImg = $mainImgContainer.find('.grid-view-item__image-main, .feature-row__image').first()
          var $siblings = $('.grid__item .grid-view-item__image, .grid__item .grid-view-item__color')
          var $price = $this.closest('.grid__item').find('.price')
          var $badgesWrapper = $this.closest('.grid__item').find('.price__badges')
          var $badgeSale = $this.closest('.grid__item').find('.price__badge--sale')
          var discount = $this.data('discount')
          if (discount > 0) {
            if (!$badgeSale.length) {
                $badgesWrapper.append('<span class="price__badge price__badge--sale" aria-hidden="true"></span>')
                $badgeSale = $badgesWrapper.find('.price__badge--sale')
            }
              $badgeSale.text('-' + discount + '%')
            $badgeSale.show()
          } else {
              $badgeSale.hide()
          }
          $mainImg.prop('srcset', imgUrl)
          $siblings.removeClass('active')
          $this.addClass('active')
      })

      $(document).on('mouseleave', '.grid__item .related-image, .grid__item .grid-view-item__color', function(e) {
          var $this = $(this)
          var $mainImgContainer = $this.closest('.grid.product-single').length ? $this.closest('.grid.product-single') : $this.closest('.grid__item')
          var $mainImg = $mainImgContainer.find('.grid-view-item__image-main, .feature-row__image').first()
          var orgSrcSet = $mainImg.data('srcset')
          var $orgIcon = $this.closest('.grid__item').find('.grid-view-item__image[data-origin="1"], .grid-view-item__color[data-origin="1"]')
          var $price = $this.closest('.grid__item').find('.price')
          var $badgesWrapper = $this.closest('.grid__item').find('.price__badges')
          var $badgeSale = $this.closest('.grid__item').find('.price__badge--sale')
          var discount = $orgIcon.data('discount')
          if (discount > 0) {
              $badgeSale.text('-' + discount + '%')
            $badgeSale.show()
          } else {
              $badgeSale.hide()
          }
          $mainImg.prop('srcset', orgSrcSet)
          $this.removeClass('active')
      })
   }, function () { return window.jQuery })
</script>
  
<script>
  // DELIVERY ESTIMATED TIME: START 
  const getZones = async({ department, province, district } = {}) => {
    var SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVrZm91c3FvZmd6ZGR6ZXB4aGtkIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDU2NDcwMTgsImV4cCI6MTk2MTIyMzAxOH0.BEGFANq0-6iGF3YJqPFZUF_8p0U5J6LkJFA20q97DaU'
    var SUPABASE_URL = "https://ukfousqofgzddzepxhkd.supabase.co"
	var supabaseDB = supabase.createClient(SUPABASE_URL, SUPABASE_KEY)

    options = {}

    if (province) {
      options.procedure = 'get_districts_by_province'
      options.parameters = { prov_name: province }

    } else if (department) {
      options.procedure = 'get_provinces_by_department'
      options.parameters = { department_code: department }

    } else {
      options.procedure = 'get_departments'
      options.paramers = null
    }

    const { data: shipping_zones, error } = await supabaseDB
    .rpc(options.procedure, options.parameters)

    return shipping_zones
  }

  const locationSelectorEl = document.querySelector('.tbx-location-selector')
  const departmentSelectorEl = locationSelectorEl.querySelector('[name="department"]')  
  const provinceSelectorEl = locationSelectorEl.querySelector('[name="province"]')
  const districtSelectorEl = locationSelectorEl.querySelector('[name="district"]')
  const rateOutputEL = locationSelectorEl.querySelector('.output')

  const setupEventsListeners = () => {    
      departmentSelectorEl.addEventListener('change', async function(e) {
        provinceSelectorEl.disabled = true
        districtSelectorEl.disabled = true
        provinceSelectorEl.innerHTML = '<option value="" selected>Elige una provincia</option>'
        districtSelectorEl.innerHTML = '<option value="" selected>Elige un distrito</option>'
        rateOutputEL.innerHTML = ''
        locationSelectorEl.classList.add('loading')
        const provinces = await getZones({ department: e.target.value })
        provinces.forEach(province => {
          const opt = document.createElement("option");
          opt.value = province;
          opt.innerHTML = province;
          provinceSelectorEl.appendChild(opt);
        })
        provinceSelectorEl.disabled = false
        locationSelectorEl.classList.remove('loading')
    })

    provinceSelectorEl.addEventListener('change', async function(e) {
      districtSelectorEl.disabled = true
      districtSelectorEl.innerHTML = '<option value="" selected>Elige un distrito</option>'
      rateOutputEL.innerHTML = ''
      locationSelectorEl.classList.add('loading')
      const districts = await getZones({ province: e.target.value })
      districts.forEach(district => {
        if (district && district.toUpperCase() === 'LIMA') { return }
        const opt = document.createElement("option");
        opt.value = district.replace(/ /g, '');
        opt.innerHTML = district;
        districtSelectorEl.appendChild(opt);
      })
      districtSelectorEl.disabled = false
      locationSelectorEl.classList.remove('loading')
    })

    districtSelectorEl.addEventListener('change', async function(e) {
      const value = e.target.value 

      const rqBody = {
        "destination": {
          "country": "PE",
          "province": departmentSelectorEl.value,
          "city": provinceSelectorEl.value,
          "postal_code": e.target.value
        },
        "items": [],
        "currency": "PEN",
        "locale": "es-PE"
      }

      let output = ''

      rateOutputEL.innerHTML = output

      try {
        locationSelectorEl.classList.add('loading')

        const response = await fetch('https://parcel-intelligence.com/cs/api_ex.php', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'HTTP_X_STORE_NAME': 'the-box-peru-sac.myshopify.com',
            'HTTP_X_STORE_TOKEN': '7a13d1af59efeab18879df28c8e2a6eef14838eb',
          },
          body: JSON.stringify(rqBody),
        })

        const { rates } = await response.json()

        output = rates && rates.length && rates[0] && rates[0].service_name
        output = output || 'Lo sentimos, de momento no contamos con cobertura en esta zona'

        locationSelectorEl.classList.remove('loading')

      } catch (error) {
        console.log(error)
        locationSelectorEl.classList.remove('loading')
        output = 'Lo sentimos, ocurrió un error al procesar la información.'
      }

      rateOutputEL.innerHTML = output
    }) 
  }

  const getDepartments = async() => {
    console.log('prueba deparments')
    provinceSelectorEl.disabled = true
    districtSelectorEl.disabled = true
    departmentSelectorEl.innerHTML = '<option value="" selected>Elige un departamento</option>'
    districtSelectorEl.innerHTML = '<option value="" selected>Elige un distrito</option>'
    rateOutputEL.innerHTML = ''
    locationSelectorEl.classList.add('loading')
    const departments = await getZones()
    const countryResponse = await fetch('//cdn.shopify.com/s/files/1/0373/4513/2676/t/71/assets/peru.json?v=16846754677916226139')
    const departmentsMapData = await countryResponse.json()
    console.log(departmentsMapData)
    departments.forEach(department => {
      	 if (department === 'PE-LMA') { return } 
         const departmentData = departmentsMapData.country.provinces.find(p => p.code === department)
		 const opt = document.createElement("option");
         opt.value = department;
         opt.innerHTML = departmentData.name;
         departmentSelectorEl.appendChild(opt);
    })
    provinceSelectorEl.disabled = false
   	locationSelectorEl.classList.remove('loading')
  }

  console.log(locationSelectorEl,departmentSelectorEl,provinceSelectorEl,districtSelectorEl,rateOutputEL)
            
  if (locationSelectorEl && departmentSelectorEl && provinceSelectorEl && districtSelectorEl && rateOutputEL) { 

    setupEventsListeners()
    
    getDepartments()
  }

// DELIVERY ESTIMATED TIME: END 
</script>
<script>            
/*location.reload();*/
</script>

 <script>
if (document.cookie.indexOf('reloaded=') === -1)

    { 
      document.cookie = 'reloaded=ok;'; location.reload();
    }
      console.log("llegue a cargar")
</script>

{% schema %}
{
  "name": {
    "da": "Produktsider",
    "de": "Produktseiten",
    "en": "Product pages",
    "es": "Páginas de productos",
    "fi": "Tuotesivut",
    "fr": "Pages de produits",
    "hi": "उत्पाद पेज",
    "it": "Pagine di prodotto",
    "ja": "商品ページ",
    "ko": "제품 페이지",
    "nb": "Produktsider",
    "nl": "Productpagina's",
    "pt-BR": "Páginas de produtos",
    "pt-PT": "Páginas de produtos",
    "sv": "Produktsidor",
    "th": "หน้าสินค้า",
    "zh-CN": "产品页面",
    "zh-TW": "產品頁面"
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": {
        "da": "Vis antalsvælger",
        "de": "Quantitäts-Auswahl anzeigen",
        "en": "Show quantity selector",
        "es": "Mostrar selector de cantidad",
        "fi": "Näytä määrän valitsin",
        "fr": "Afficher le sélecteur de quantité",
        "hi": "मात्रा चयनकर्ता दिखाएं",
        "it": "Mostra selettore quantità",
        "ja": "数量セレクターを表示する",
        "ko": "수량 선택기 표시",
        "nb": "Vis mengdevelger",
        "nl": "Hoeveelheidskiezer weergeven",
        "pt-BR": "Exibir seletor de quantidade",
        "pt-PT": "Mostrar um seletor de quantidade",
        "sv": "Visa kvantitetsväljare",
        "th": "แสดงตัวเลือกจำนวน",
        "zh-CN": "显示数量选择器",
        "zh-TW": "顯示數量選擇器"
      },
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_variant_labels",
      "label": {
        "da": "Vis variantlabels",
        "de": "Varianten-Etiketten anzeigen",
        "en": "Show variant labels",
        "es": "Mostrar etiquetas de variantes",
        "fi": "Näytä vaihtoehtoiset tarrat",
        "fr": "Afficher le nom des variantes",
        "hi": "वेरिएंट लेबल दिखाएं",
        "it": "Mostra etichette varianti",
        "ja": "バリエーションのラベルを表示する",
        "ko": "이형 상품 레이블 표시",
        "nb": "Vis variantetiketter",
        "nl": "Variantlabels weergeven",
        "pt-BR": "Exibir etiquetas de variantes",
        "pt-PT": "Mostrar etiquetas de variantes",
        "sv": "Visa variantetiketter",
        "th": "แสดงป้ายกำกับตัวเลือกสินค้า",
        "zh-CN": "显示多属性标签",
        "zh-TW": "顯示子類選項標籤"
      },
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": {
        "da": "Vis leverandør",
        "de": "Lieferanten anzeigen",
        "en": "Show vendor",
        "es": "Mostrar proveedor",
        "fi": "Näytä myyjä",
        "fr": "Afficher les vendeurs",
        "hi": "विक्रेता दिखाएं",
        "it": "Mostra fornitore",
        "ja": "販売元を表示する",
        "ko": "공급업체 표시",
        "nb": "Vis leverandør",
        "nl": "Leverancier weergeven",
        "pt-BR": "Exibir fornecedor",
        "pt-PT": "Mostrar fornecedor",
        "sv": "Visa säljare",
        "th": "แสดงผู้ขาย",
        "zh-CN": "显示厂商",
        "zh-TW": "顯示廠商"
      },
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_payment_button",
      "label": {
        "da": "Vis dynamisk betalingsknap",
        "de": "Dynamischen Checkout Button anzeigen",
        "en": "Show dynamic checkout button",
        "es": "Mostrar botón de pago dinámico",
        "fi": "Näytä dynaaminen kassapainike",
        "fr": "Afficher le bouton de passage à la caisse dynamique",
        "hi": "डायनेमिक चेकआउट बटन दिखाएं",
        "it": "Mostra pulsante di check-out dinamico",
        "ja": "ダイナミックチェックアウトボタンを表示する",
        "ko": "동적 결제 버튼 표시",
        "nb": "Vis dynamisk knapp for å gå til kassen",
        "nl": "Dynamische checkout knop weergeven",
        "pt-BR": "Exibir botão dinâmico de finalização da compra",
        "pt-PT": "Mostrar o botão dinâmico de finalização da compra",
        "sv": "Visa dynamiska utcheckningsknappar",
        "th": "แสดงปุ่มชำระเงินแบบไดนามิก",
        "zh-CN": "显示动态结账按钮",
        "zh-TW": "顯示動態結帳按鈕"
      },
      "info": {
        "da": "Den enkelte kunde vil se sin foretrukne betalingsmetode blandt dem, der er tilgængelige i din butik, f.eks. PayPal eller Apple Pay. [Få mere at vide](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "de": "Jeder Kunde sieht seine bevorzugte Zahlungsmethode aus den in Ihrem Shop verfügbaren Zahlungsmethoden wie PayPal oder Apple Pay. [Mehr Informationen](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "en": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "es": "Cada cliente verá su forma de pago preferida entre las disponibles en tu tienda, como PayPal o Apple Pay. [Más información](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "fi": "Kukin asiakas näkee ensisijaisen valintansa kauppasi tarjoamista maksutavoista, esim. PayPal tai Apple Pay. [Lisätietoja](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "fr": "Chaque client verra son moyen de paiement préféré parmi ceux qui sont proposés sur votre boutique, tels que PayPal ou Apple Pay. [En savoir plus](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "hi": "प्रत्येक ग्राहक आपके स्टोर पर उपलब्ध अपनी पसंदीदा भुगतान की विधि देखेंगे जैसे PayPal या Apple Pay. [अधिक जानें](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "it": "Ogni cliente vedrà il suo metodo di pagamento preferito tra quelli disponibili nel tuo negozio, come PayPal o Apple Pay. [Maggiori informazioni](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "ja": "PayPalやApple Payなど、ストアで利用可能な希望の決済方法がお客様に表示されます。[詳細情報](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "ko": "각 고객은 PayPal 또는 Apple Pay와 같이 스토어에서 사용 가능한 지불 방법을 확인할 수 있습니다. [자세히 알아보기](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "nb": "Hver enkelt kunde vil se sin foretrukne betalingsmåte blant de som er tilgjengelig i butikken din, som PayPal eller Apple Pay. [Finn ut mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "nl": "Elke klant ziet zijn of haar beschikbare voorkeursmethode om af te rekenen, zoals PayPal of Apple Pay. [Meer informatie](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "pt-BR": "Cada cliente verá a forma de pagamento preferencial dele dentre as disponíveis na loja, como PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "pt-PT": "Cada cliente irá ver o seu método de pagamento preferido entre os disponíveis na loja, como o PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "sv": "Varje kund kommer att se den föredragna betalningsmetoden från de som finns tillgängliga i din butik, till exempel PayPal eller Apple Pay. [Läs mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "th": "ลูกค้าแต่ละรายจะเห็นวิธีการชำระเงินที่ต้องการจากวิธีที่ใช้ได้ในร้านค้าของคุณ เช่น PayPal หรือ Apple Pay [เรียนรู้เพิ่มเติม](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "zh-CN": "每位客户都可在您商店提供的付款方式中看到他们的首选付款方式，例如 PayPal 或 Apple Pay。[了解详细信息](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
        "zh-TW": "每位顧客都可以在您商店內開放使用的付款方式中看見他們偏好使用的方式，如 PayPal、Apple Pay 等。[深入瞭解](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)"
      },
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label": {
        "da": "Vis knapper til deling på sociale medier",
        "de": "Buttons für Social Media anzeigen",
        "en": "Show social sharing buttons",
        "es": "Mostrar botones para compartir en redes sociales",
        "fi": "Näytä sosiaalisen median jakamispainikkeet",
        "fr": "Affichez les boutons de partage sur les médias sociaux",
        "hi": "सोशल शेयरिंग बटन दिखाएं",
        "it": "Mostra i pulsanti per la condivisione sui social",
        "ja": "ソーシャル共有ボタンを表示する",
        "ko": "소셜 공유 버튼 표시",
        "nb": "Vis knapper for deling på sosiale medier",
        "nl": "Knoppen voor sociaal delen weergeven",
        "pt-BR": "Exibir botões de compartilhamento em redes sociais",
        "pt-PT": "Mostrar botões de partilha nas redes sociais",
        "sv": "Visa knappar för delning i sociala medier",
        "th": "แสดงปุ่มสำหรับแชร์ลงโซเชียล",
        "zh-CN": "显示社交分享按钮",
        "zh-TW": "顯示社群分享按鈕"
      },
      "default": true
    },
    {
      "type": "header",
      "content": {
        "da": "Medie",
        "de": "Medien",
        "en": "Media",
        "es": "Medios de comunicación",
        "fi": "Media",
        "fr": "Support multimédia",
        "hi": "मीडिया",
        "it": "Media",
        "ja": "メディア",
        "ko": "미디어",
        "nb": "Medier",
        "nl": "Media",
        "pt-BR": "Mídia",
        "pt-PT": "Multimédia",
        "sv": "media",
        "th": "สื่อ",
        "zh-CN": "媒体",
        "zh-TW": "媒體"
      },
      "info": {
        "da": "Få mere at vide om [media types](https://help.shopify.com/manual/products/product-media)",
        "de": "Mehr Informationen über [Medientypen ](https://help.shopify.com/manual/products/product-media)",
        "en": "Learn more about [media types](https://help.shopify.com/manual/products/product-media)",
        "es": "Más información sobre [tipos de archivos multimedia](https://help.shopify.com/manual/products/product-media)",
        "fi": "Lue lisää [mediatyypeistä](https://help.shopify.com/manual/products/product-media)",
        "fr": "En savoir plus sur les [types de supports multimédia](https://help.shopify.com/manual/products/product-media)",
        "hi": "[मीडिया प्रकार](https://help.shopify.com/manual/products/product-media) के बारे में और जानें",
        "it": "Scopri di più sulle [tipologie di file multimediali](https://help.shopify.com/manual/products/product-media)",
        "ja": "[メディアのタイプ](https://help.shopify.com/manual/products/product-media) について詳しく知る",
        "ko": "[미디어 유형](https://help.shopify.com/manual/products/product-media)에 대해 자세히 알아보기",
        "nb": "Lær mer om [medietyper](https://help.shopify.com/manual/products/product-media)",
        "nl": "Meer informatie over [mediatypen](https://help.shopify.com/manual/products/product-media)",
        "pt-BR": "Saiba mais sobre [tipos de mídia](https://help.shopify.com/manual/products/product-media)",
        "pt-PT": "Saiba mais sobre [media types](https://help.shopify.com/manual/products/product-media)",
        "sv": "Läs mer om [mediatyper](https://help.shopify.com/manual/products/product-media)",
        "th": "ดูข้อมูลเพิ่มเติมเกี่ยวกับ [ประเภทของสื่อ](https://help.shopify.com/manual/products/product-media)",
        "zh-CN": "详细了解[媒体类型](https://help.shopify.com/manual/products/product-media)",
        "zh-TW": "深入瞭解 [媒體類型](https://help.shopify.com/manual/products/product-media)"
      }
    },
    {
      "type": "select",
      "id": "media_size",
      "label": {
        "da": "Størrelse",
        "de": "Größe",
        "en": "Size",
        "es": "Tamaño",
        "fi": "Koko",
        "fr": "Taille",
        "hi": "आकार",
        "it": "Dimensione",
        "ja": "サイズ",
        "ko": "사이즈",
        "nb": "Størrelse",
        "nl": "Grootte",
        "pt-BR": "Tamanho",
        "pt-PT": "Tamanho",
        "sv": "Storlek",
        "th": "ขนาด",
        "zh-CN": "大小",
        "zh-TW": "尺寸"
      },
      "options": [
        {
          "value": "small",
          "label": {
            "da": "Lille",
            "de": "Klein",
            "en": "Small",
            "es": "Pequeño",
            "fi": "Pieni",
            "fr": "Petit",
            "hi": "छोटा",
            "it": "Piccolo",
            "ja": "スモール",
            "ko": "스몰",
            "nb": "Liten",
            "nl": "Klein",
            "pt-BR": "Pequeno",
            "pt-PT": "Pequeno",
            "sv": "Liten",
            "th": "เล็ก",
            "zh-CN": "小",
            "zh-TW": "小型"
          }
        },
        {
          "value": "medium",
          "label": {
            "da": "Medium",
            "de": "Mittel",
            "en": "Medium",
            "es": "Mediano",
            "fi": "Keskisuuri",
            "fr": "Moyenne",
            "hi": "मध्यम",
            "it": "Medio",
            "ja": "中",
            "ko": "보통",
            "nb": "Middels",
            "nl": "Gemiddeld",
            "pt-BR": "Médio",
            "pt-PT": "Médio",
            "sv": "Medium",
            "th": "ปานกลาง",
            "zh-CN": "中等",
            "zh-TW": "中等"
          }
        },
        {
          "value": "large",
          "label": {
            "da": "Stor",
            "de": "Groß",
            "en": "Large",
            "es": "Grande",
            "fi": "Suuri",
            "fr": "Grande",
            "hi": "बड़ा",
            "it": "Grande",
            "ja": "大",
            "ko": "라지",
            "nb": "Stor",
            "nl": "Groot",
            "pt-BR": "Grande",
            "pt-PT": "Grande",
            "sv": "Stor",
            "th": "ใหญ่",
            "zh-CN": "大",
            "zh-TW": "大型"
          }
        },
        {
          "value": "full",
          "label": {
            "da": "Fuld bredde",
            "de": "Volle Breite",
            "en": "Full-width",
            "es": "Ancho completo",
            "fi": "Täysi leveys",
            "fr": "Pleine largeur",
            "hi": "पूर्ण चौड़ाई",
            "it": "Intera larghezza",
            "ja": "全幅",
            "ko": "전체 폭",
            "nb": "Full bredde",
            "nl": "Volledige breedte",
            "pt-BR": "Largura completa",
            "pt-PT": "Largura completa",
            "sv": "Full bredd",
            "th": "เต็มความกว้าง",
            "zh-CN": "全宽",
            "zh-TW": "完整寬度"
          }
        }
      ],
      "default": "medium"
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "label": {
        "da": "Aktivér billedzoom",
        "de": "Foto-Zoom zulassen",
        "en": "Enable image zoom",
        "es": "Habilitar zoom de imagen",
        "fi": "Ota kuvan zoomaus käyttöön",
        "fr": "Activer le zoom d'image",
        "hi": "इमेज ज़ूम सक्षम करें",
        "it": "Abilita lo zoom dell'immagine",
        "ja": "画像ズームを有効にする",
        "ko": "이미지 확대 사용",
        "nb": "Aktiver bildezoom",
        "nl": "Inzoomen op afbeelding inschakelen",
        "pt-BR": "Habilitar o zoom da imagem",
        "pt-PT": "Ativar o zoom da imagem",
        "sv": "Aktivera bildzoom",
        "th": "เปิดใช้การซูมภาพ",
        "zh-CN": "启用图片缩放",
        "zh-TW": "啟用圖片縮放"
      },
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": {
        "da": "Aktivér looping af videoer",
        "de": "Videschleife aktivieren",
        "en": "Enable video looping",
        "es": "Habilitar la reproducción de video en bucle",
        "fi": "Ota käyttöön videosilmukka",
        "fr": "Activer le bouclage de la vidéo",
        "hi": "वीडियो लूपिंग सक्षम करें",
        "it": "Abilita la riproduzione in loop dei video",
        "ja": "ビデオのループを有効にする",
        "ko": "동영상 루프",
        "nb": "Aktiver løkkeavspilling av video",
        "nl": "Video-looping inschakelen",
        "pt-BR": "Habilitar loop de vídeo",
        "pt-PT": "Ativar ciclo de vídeo",
        "sv": "Aktivera video-loopning",
        "th": "เปิดใช้งานการวนซ้ำวิดีโอ",
        "zh-CN": "启用视频循环",
        "zh-TW": "啟用影片循環功能"
      },
      "default": false
    }
  ]
}
{% endschema %}
